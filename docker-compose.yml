services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USE_HTTPS: ${USE_HTTPS}
    image: cert-api:latest
    ports:
      - '3000:3000'
    env_file:
      - .env
    environment:
      USE_HTTPS: ${USE_HTTPS}
      NODE_ENV: production
    volumes:
      - .:/usr/src/app:delegated
      - /usr/src/app/node_modules
      - ./logs:/usr/src/app/logs
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000/health || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    init: true
    stop_grace_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '512M'
      restart_policy:
        condition: on-failure

  db:
    image: postgres:17.2
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    stop_grace_period: 30s

networks:
  default:
    name: project_network
    driver: bridge

volumes:
  postgres-data:
    driver: local
